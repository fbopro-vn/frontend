'use client'
import React, { useState, useEffect } from "react";
import { Box, TextField, Typography, Button, Paper, Select, MenuItem, Switch, FormControl, InputLabel } from "@mui/material";

import SearchCustomer from './SearchCustomer';
import SearchStaff from './SearchStaff';
import { useOrderContext } from "@/app/context/OrderContext"; // ‚úÖ Import Context


const CustomerForm: React.FC = () => {
  const { orders, activeOrderId, updateActiveOrderCustomer, getActiveOrderNote, updateOrderField } = useOrderContext(); // 
  const activeOrder = orders.find(order => order.id === activeOrderId);
  const [isClient, setIsClient] = useState(false);
  const [selectedCustomer, setSelectedCustomer] = useState<Customer | null>(null);
  useEffect(() => {
    setIsClient(true);
  }, []);

  // N·∫øu ch∆∞a c√≥ client-side render, kh√¥ng hi·ªÉn th·ªã component
  if (!isClient) return null;


  // const [paymentMethod, setPaymentMethod] = useState("Chuy·ªÉn kho·∫£n c√° nh√¢n");
  // const [cod, setCod] = useState(false);
   

//   console.log("activeOrder:", activeOrder);
// console.log("activeOrder.customer:", activeOrder?.customer);

  return (

    <Box sx={{
      ml: "30px",
      width: '600px',
      height: '550px',
      border: '1px solid white',
      borderRadius: '10px',
      boxShadow: "0px 4px 10px rgba(0, 0, 0, 0.2)",
      display: 'flex',
      flexDirection: "column",
      alignItems: "center",
      justifyContent: "flex-start", // ƒê·∫∑t ph·∫ßn t·ª≠ l√™n tr√™n, tr√°nh gi√£n c√°ch qu√° l·ªõn
      padding: "20px", // T·∫°o kho·∫£ng c√°ch b√™n trong Box
      gap: "25px", // Gi·∫£m kho·∫£ng c√°ch gi·ªØa c√°c TextField, ƒëi·ªÅu ch·ªânh theo nhu c·∫ßu
      position: "relative"
    }}>
    
    <SearchStaff/>
    <SearchCustomer onSelectCustomer={(customer) => {
      console.log("üîç Kh√°ch h√†ng ƒë∆∞·ª£c ch·ªçn:", customer); // Debug xem `customer` c√≥ ƒë√∫ng kh√¥ng
        setSelectedCustomer(customer);
        if (customer) { // ‚úÖ Ki·ªÉm tra null tr∆∞·ªõc khi g·ªçi
          updateActiveOrderCustomer(customer);
      }
 // ‚úÖ L∆∞u v√†o ƒë∆°n h√†ng hi·ªán t·∫°i
      }} />


{/* ID khach */}
    <TextField 
      value={activeOrder?.customer.id}
      sx={{ display: "none"}}
    />

    <TextField sx={{
    width: '520px',
    '& .MuiInputBase-root': {
      height: 30, // Chi·ªÅu cao c·ªßa input
    },
    '& .MuiOutlinedInput-root': {
      '& fieldset': {
        borderColor: 'default', // M√†u m·∫∑c ƒë·ªãnh c·ªßa border
      },
      '&:hover fieldset': {
        borderColor: '#8DB883', // Khi hover, border s·∫Ω ƒë·ªïi m√†u ƒë·ªè
      },
      '&.Mui-focused fieldset': {
        borderColor: '#8DB883', // Khi active (focused), border s·∫Ω ƒë·ªïi m√†u v√†ng
      }}
  }}  
  placeholder="T√™n Kh√°ch H√†ng"  id="outlined-basic"  variant="outlined" slotProps={{
            input: {
                readOnly: true,
            },
        }}
        value={activeOrder?.customer?.name ?? ""}
        />
    <TextField sx={{ width: '520px', height: '30px', '& .MuiInputBase-root': {
        height: 30, // Chi·ªÅu cao c·ªßa input
        }
       }}  placeholder="S·ªë ƒêi·ªán Tho·∫°i" id="outlined-basic"   variant="outlined" slotProps={{
            input: {
                readOnly: true,
            },
        }}
        value={activeOrder?.customer?.phone ?? ""}
        />
    <TextField sx={{ width: '520px', height: '30px', '& .MuiInputBase-root': {
        height: 30, // Chi·ªÅu cao c·ªßa input
    }
      }}  placeholder="ƒê·ªãa Ch·ªâ Kh√°ch H√†ng" id="outlined-basic"   variant="outlined" slotProps={{
            input: {
                readOnly: true,
            },

            
        }}
        
        value={activeOrder?.customer?.address ?? ""}/>

    {/* TextField Ghi Ch√∫ gi·ªëng textarea */}
    <TextField 
        sx={{ width: '520px' }} 
        id="outlined-basic" 
        label="Ghi Ch√∫ ƒê∆°n H√†ng" 
        value={getActiveOrderNote() || ""}
        onChange={(e) => updateOrderField("note", e.target.value)}
        variant="outlined" 
        multiline
        minRows={8}
        maxRows={8}
    />

    

   
    {/* <Button sx={{
      position: "absolute",
      color: "#8DB883",
      top: '67px',
      right: "34px"
    }}><ModalAddCustomer /></Button> */}
</Box>


  );
};

export default CustomerForm;
